version: '3.7'

services:
  elasticsearch:
    build:
      context: elasticsearch/
      args:
        ELK_VERSION: $ELK_VERSION
    volumes:
      - type: bind
        source: ./elasticsearch/config/elasticsearch.yml
        target: /usr/share/elasticsearch/config/elasticsearch.yml
        read_only: true
      - type: volume
        source: elasticsearch
        target: /usr/share/elasticsearch/data
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      ES_JAVA_OPTS: "-Xmx256m -Xms256m"
      ELASTIC_PASSWORD: changeme
      # Use single node discovery in order to disable production mode and avoid bootstrap checks
      # see https://www.elastic.co/guide/en/elasticsearch/reference/current/bootstrap-checks.html
      discovery.type: single-node
    networks:
      - elk

  logstash:
    build:
      context: logstash/
      args:
        ELK_VERSION: $ELK_VERSION
    volumes:
      - type: bind
        source: ./logstash/config/logstash.yml
        target: /usr/share/logstash/config/logstash.yml
        read_only: true
      - type: bind
        source: ./logstash/pipeline
        target: /usr/share/logstash/pipeline
        read_only: true
    ports:
      - "5001:5000/tcp"
      - "5001:5000/udp"
      - "9600:9600"
    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
    networks:
      - elk
    depends_on:
      - elasticsearch
      - rabbitmq

  kibana:
    build:
      context: kibana/
      args:
        ELK_VERSION: $ELK_VERSION
    volumes:
      - type: bind
        source: ./kibana/config/kibana.yml
        target: /usr/share/kibana/config/kibana.yml
        read_only: true
    ports:
      - "5601:5601"
    networks:
      - elk
    depends_on:
      - elasticsearch

  rabbitmq:
    build: ./rabbitmq/
    container_name: rabbitmq-container
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - elk

  vault-server:
    image: vault:1.13.3
    container_name: vault-server-container
    ports:
      - "8200:8200"
    environment:
      VAULT_ADDR: "http://0.0.0.0:8200"
      VAULT_DEV_ROOT_TOKEN_ID: "vault-plaintext-root-token"
    cap_add:
      - IPC_LOCK
    networks:
      - elk
  postgres:
    image: postgres
    container_name: postgres-container-main
    ports:
      - "54320:5432"
    environment:
      POSTGRES_USER: "myuser"
      POSTGRES_PASSWORD: "mysecretpassword"
      POSTGRES_DB: "shopdb"
    networks:
      - elk
  postgresUser:
    image: postgres
    container_name: postgres-container-user
    ports:
      - "54321:5432"
    environment:
      POSTGRES_USER: "myuser"
      POSTGRES_PASSWORD: "mysecretpassword"
      POSTGRES_DB: "shopdb"
    networks:
      - elk

  dev12:
    image: dev12/springjdbc:1.0
    ports:
      - "8666:8666"
    networks:
      - elk
    depends_on:
      - rabbitmq
      - postgres
      - vault-server

networks:
  elk:
    driver: bridge

volumes:
  elasticsearch:
